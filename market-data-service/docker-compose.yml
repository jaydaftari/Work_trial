version: '3.8'

services:
  db:
    image: postgres:15
    container_name: marketdata_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: marketdata
    volumes:
      - pgdata:/var/lib/postgresql/data

  broker:
    image: apache/kafka:latest
    container_name: broker
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - broker
    ports:
      - "8080:8080"
    restart: always
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=broker
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9092
      
  init-db:
    build: .
    container_name: marketdata_initdb
    depends_on:
      - db
    restart: "no"
    volumes:
      - .:/app
    working_dir: /app
    environment:
      PYTHONPATH: /app
    command: >
      bash -c "
      python scripts/wait_for_postgres.py &&
      python scripts/init_db.py
      "

  api:
    build: .
    container_name: marketdata_api
    depends_on:
      - broker
      - db
      - init-db
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    working_dir: /app
    environment:
      PYTHONPATH: /app
      KAFKA_BOOTSTRAP_SERVERS: broker:9092
    command: >
      bash -c "
      python scripts/wait_for_kafka.py &&
      uvicorn app.api.main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  pgdata:
